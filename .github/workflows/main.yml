name: Run PHPUnit testsuite

on: [push, pull_request, workflow_dispatch]

jobs:
  phpunit-action:
    runs-on: ubuntu-20.04
    env:
      PARALLEL_PHPUNIT_TESTS: 4
      MEDIAWIKI_USER: "Moderator User"
      MEDIAWIKI_PASSWORD: "123456"
      branch: REL1_35
    services:
      memcached:
        image: memcached:latest
        ports:
          - 11211/udp
        options: --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'" --health-interval 10s --health-timeout 5s --health-retries 5
      mariadb:
        image: mariadb
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: 1
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - uses: shivammathur/setup-php@v2
        with:
            php-version: '7.4'
            tools: composer:v1
            ini-values: zend.enable_gc=Off, opcache.enable_cli=1, opcache.file_cache="/dev/shm", opcache.file_cache_only=1, opcache.file_cache_consistency_checks=0, opcache.validate_timestamps=0
      - uses: actions/cache@v2
        with:
          path: |
            ~/.composer/cache
            buildcache
          key: buildcache-${{ env.branch }}-${{ hashFiles('**/scripts', '**/action.yml') }}
      - name: Call the "install MediaWiki" action
        uses: edwardspec/github-action-build-mediawiki@master
        with:
          branch: ${{ env.branch }}
          extraLocalSettings: tests/travis/ModerationSettings.php
          extensions: "AbuseFilter CheckUser Echo MobileFrontend PageForms VisualEditor"
          skins: "MinervaNeue"

      - name: Finalize the installation
        run: |
          rsync -a --exclude buildcache --exclude mediawiki --exclude .git . mediawiki/extensions/Moderation/
          cd mediawiki && echo 'DELETE FROM recentchanges;' | php maintenance/sql.php
          WITH_ECHO=1 php maintenance/update.php --quick
          php maintenance/createAndPromote.php "$MEDIAWIKI_USER" "$MEDIAWIKI_PASSWORD" --custom-groups moderator,automoderated
          cd extensions/Moderation && composer install

      - name: Try running some maintenance script on the newly installed MediaWiki instance
        run: cd mediawiki && echo '{{CURRENTVERSION}}' | php maintenance/parse.php

        # Start by running non-blackbox unit tests that can use temporary DB tables.
        # These tests are much faster than the integration testsuite.
      - name: Run non-blackbox unit tests (very fast)
        run: cd mediawiki && php tests/phpunit/phpunit.php extensions/Moderation/tests/phpunit/consequence/

        # First run the smallest test without --reuse-db, so that the cloned database tables are created,
        # then run the remaining testsuite with --reuse-db to save time.
      - name: Create temporary database for blackbox unit tests
        run: cd mediawiki && php tests/phpunit/phpunit.php --use-normal-tables extensions/Moderation/tests/phpunit/blackbox/ModerationPermissionsTest.php

        # Run all tests in parallel via Fastest.
        # Note: test files are sorted by filesize (from smallest to largest).
      - name: Run integration tests
        run: find extensions/Moderation/tests/phpunit/{blackbox,decoupled} -name "*Test.php" -exec ls -1Sr {} + | ./extensions/Moderation/vendor/liuggio/fastest/fastest -p "$PARALLEL_PHPUNIT_TESTS" --before="./extensions/Moderation/tests/travis/fastest_init_thread.sh" --preserve-order --verbose "php tests/phpunit/phpunit.php --use-normal-tables --reuse-db {};"
