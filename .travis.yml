# Commit message convention: "(doc)" means README updates, etc. - they don't change any code.
if: commit_message !~ /^\(doc\)/

dist: xenial
language: php

conditions: v1

git:
  depth: 1

notifications:
  email: false

branches:
  except:
  - REL1_23

services:
  - memcached
  - postgresql

addons:
  &common-addons
  hosts:
    - moderation.example.com
  mariadb: "10.3"

php:
  - 7.2

env:
  global:
    - TESTSUITE_TYPE=phpunit
    - DBTYPE=mysql
    - DBNAME=traviswiki
    - DBUSER=root
    - MEDIAWIKI_USER="Moderator User"
    - MEDIAWIKI_PASSWORD="123456"
    # Number of parallel PHPUnit runs.
    # Note: Travis uses 2 CPU cores, but these testsuite processes are often blocked on IO, etc.,
    # so we are still seeing performance improvement when increasing it from 2 to 4.
    - PARALLEL_PHPUNIT_TESTS=4

matrix:
  fast_finish: true
  allow_failures:
    # wdio-testrunner sometimes throws an exception AFTER all tests have succeeded,
    # which leads to exit code 1 (failure). Until the cause is investigated, we don't
    # consider Selenium failures as fatal in Travis (but can always check the log).
    - env: TESTSUITE_TYPE=selenium branch=REL1_31
    - env: TESTSUITE_TYPE=selenium branch=REL1_32
    - env: TESTSUITE_TYPE=selenium branch=REL1_33
    - env: TESTSUITE_TYPE=selenium branch=REL1_34
    - env: TESTSUITE_TYPE=selenium branch=REL1_35
    # master branch of MediaWiki core is in constant development, tests against it are advisory
    - env: branch=master
    # Coverage calculation is optional.
    - env: TESTSUITE_TYPE=coverage branch=REL1_34
  include:
    # Linters (phpcs, eslint, etc.)
    - &linter-php-build
      if: NOT branch IN (selenium,phan,coverage)
      env: TESTSUITE_TYPE=linter-php
      addons:
      before_script: composer self-update --1 && composer install
      script: composer test

    - &linter-js-build
      if: NOT branch IN (phpunit,postgres,phan,consequence,coverage)
      env: TESTSUITE_TYPE=linter-js
      language: node_js
      node_js: 10
      php: false
      addons:
      before_script: npm install
      script: npm test

    # Phan (PHP static analyzer)
    - &phan-build
      if: NOT branch IN (selenium,troubleshooting,linters,consequence,coverage)
      env: TESTSUITE_TYPE=phan branch=REL1_35
      php: 7.3
      before_script:
        - composer self-update --1
        - pecl install ast
        - phpenv config-rm xdebug.ini
        - php -i
        - bash -ex ./tests/travis/build_mediawiki.sh "$branch"
        - rsync -a --exclude buildcache --exclude mediawiki --exclude .git . mediawiki/extensions/Moderation/
        - cd mediawiki
        - ( cd extensions/Moderation && composer install )
      script:
        - ( cd extensions/Moderation && ./vendor/bin/phan --analyze-twice )

    # Phan for ModerationTestsuite framework
    - <<: *phan-build
      if: branch IN (phan,phpunit,consequence)
      env: TESTSUITE_TYPE=phan branch=REL1_35 PHAN_CHECK_TESTSUITE=1

    # PHPUnit tests
    - &phpunit-build
      if: NOT branch IN (selenium,troubleshooting,linters,phan,coverage)
      env: branch=REL1_31
      script:
        # Start by running non-blackbox unit tests that can use temporary DB tables.
        # These tests are much faster than the integration testsuite.
        - php tests/phpunit/phpunit.php extensions/Moderation/tests/phpunit/consequence/

        # First run the smallest test without --reuse-db, so that the cloned database tables are created,
        # then run the remaining testsuite with --reuse-db to save time.
        - php tests/phpunit/phpunit.php --use-normal-tables extensions/Moderation/tests/phpunit/blackbox/ModerationPermissionsTest.php

        # Run all tests in parallel via Fastest.
        # Note: test files are sorted by filesize (from smallest to largest).
        - find extensions/Moderation/tests/phpunit/{blackbox,decoupled} -name "*Test.php" -exec ls -1Sr {} + | ./extensions/Moderation/vendor/liuggio/fastest/fastest -p "$PARALLEL_PHPUNIT_TESTS" --before="./extensions/Moderation/tests/travis/fastest_init_thread.sh" --preserve-order --verbose "php tests/phpunit/phpunit.php --use-normal-tables --reuse-db {};"

        # NotifyModeratorTest has already been completed without Echo, but it should also be tested with Echo.
        - WITH_ECHO=1 php tests/phpunit/phpunit.php --use-normal-tables --reuse-db extensions/Moderation/tests/phpunit/blackbox/ModerationNotifyModeratorTest.php

    - <<: *phpunit-build
      env: branch=REL1_32
    - <<: *phpunit-build
      env: branch=REL1_33
    - <<: *phpunit-build
      env: branch=REL1_34
      php: 7.3
    - <<: *phpunit-build
      env: branch=REL1_35
      php: 7.4
# Note: 1.31+PostgreSQL combination is not supported by testsuite itself.
#    - <<: *phpunit-build
#      env: branch=REL1_31 DBTYPE=postgres
    - <<: *phpunit-build
      env: branch=REL1_32 DBTYPE=postgres
    - <<: *phpunit-build
      env: branch=REL1_33 DBTYPE=postgres
    - <<: *phpunit-build
      env: branch=REL1_34 DBTYPE=postgres
      php: 7.3
    - <<: *phpunit-build
      env: branch=REL1_35 DBTYPE=postgres
      php: 7.4
#    - <<: *phpunit-build
#      env: branch=unknown_branch_will_be_treated_as_master

    # Optional: PHPUnit tests with the master branch of MediaWiki core
    - <<: *phpunit-build
      if: branch IN (phpunit)
      env: branch=master
      php: 7.4
    - <<: *phpunit-build
      if: branch IN (nightly)
      env: branch=master
      php: nightly
    - <<: *phpunit-build
      if: branch IN (troubleshooting)
      env: branch=REL1_34 FLAKY_TEST="edit in existing page"
      script: ./extensions/Moderation/tests/travis/troubleshoot_flaky_test.sh "${FLAKY_TEST}"

   # Optional: use PHPUnit to calculate code coverage of consequence tests
    - <<: *phpunit-build
      if: branch IN (phpunit,coverage)
      env: TESTSUITE_TYPE=coverage branch=REL1_34
      php: 7.3
      script:
        # Run consequence tests only. We won't be able to calculate coverage of blackbox tests,
        # because CliEngine invokes them as a separate process, and PHPUnit has no way to track that.
        # Note: "phpdbg" really likes to segfault on exit (after the coverage has already been generated), so we ignore exit code 139.
        - phpdbg -qrr tests/phpunit/phpunit.php --coverage-text --coverage-clover coverage-report.xml --configuration extensions/Moderation/tests/phpunit/coverage.suite.xml || [[ $? = 139 ]]
      after_script:
        - bash <(curl -s https://codecov.io/bash)

    # Selenium tests
    - &selenium-build
      if: branch IN (selenium,travis-sandbox)
      env: TESTSUITE_TYPE=selenium branch=REL1_31
      addons:
          <<: *common-addons
          firefox: latest
          chrome: stable
      script: ( cd extensions/Moderation/tests/selenium && ./node_modules/.bin/wdio wdio.conf.standalone.js --baseUrl 'http://moderation.example.com/mediawiki/' )
      after_script:
        - cat $TRAVIS_BUILD_DIR/parsoid.log
        - sudo cat /var/log/apache2/error.log
    - <<: *selenium-build
      env: TESTSUITE_TYPE=selenium branch=REL1_32
    - <<: *selenium-build
      env: TESTSUITE_TYPE=selenium branch=REL1_33
    - <<: *selenium-build
      env: TESTSUITE_TYPE=selenium branch=REL1_34
    - <<: *selenium-build
      env: TESTSUITE_TYPE=selenium branch=REL1_35
      php: 7.3

cache:
  directories:
    - buildcache
    - parsoid
    - $HOME/.composer/cache
    - $HOME/.npm

before_script:
  - echo $TESTSUITE_TYPE
  # Revert Composer to 1.10, because wikimedia/composer-merge-plugin v1.4.1 (used by MediaWiki 1.31) is not compatible with Composer 2.
  - composer self-update --1

  - if [ ${TRAVIS_PHP_VERSION} != "nightly" ]; then phpenv config-rm xdebug.ini; fi
  - phpenv config-add tests/travis/phpconf/php.ini
  - if [ ${TRAVIS_PHP_VERSION:0:1} != "5" ]; then phpenv config-add tests/travis/phpconf/php7.ini; fi
  - php -i

  - if [ ${TESTSUITE_TYPE} = "selenium" ]; then bash -ex ./tests/travis/apache/run_apache.sh; fi
  - if [ ${TESTSUITE_TYPE} = "selenium" ]; then bash -ex ./tests/travis/parsoid/run_parsoid.sh "$branch"; fi
  - bash -ex ./tests/travis/build_mediawiki.sh "$branch"

  - rsync -a --exclude buildcache --exclude mediawiki --exclude .git . mediawiki/extensions/Moderation/
  - cd mediawiki
  - if [ "$DBTYPE" = "postgres" ]; then export DBUSER=postgres; fi
  - >
      php maintenance/install.php traviswiki admin
      --pass $(dd if=/dev/urandom count=1 bs=20 2>/dev/null | base64)
      --dbtype "$DBTYPE"
      --dbname "$DBNAME"
      --dbuser "$DBUSER"
      --dbpass ""
      --scriptpath "/w"
  - echo -en "\n\nrequire_once __DIR__ . '/includes/DevelopmentSettings.php';\n" >> ./LocalSettings.php
  - echo -en "\n\nrequire_once __DIR__ . '/extensions/Moderation/tests/travis/ModerationSettings.php';\n" >> ./LocalSettings.php
  - php -l ./LocalSettings.php
  - echo 'DELETE FROM recentchanges;' | php maintenance/sql.php # Workaround for Extension:CheckUser's updater issue (which is unrelated to Moderation)
  - WITH_ECHO=1 php maintenance/update.php --quick
  - php maintenance/createAndPromote.php "$MEDIAWIKI_USER" "$MEDIAWIKI_PASSWORD" --custom-groups moderator,automoderated
  - if [ ${TESTSUITE_TYPE} = "selenium" ]; then ( cd extensions/Moderation/tests/selenium && npm install ); fi
  - if [ ${TESTSUITE_TYPE} = "phpunit" ]; then ( cd extensions/Moderation && composer install ); fi
